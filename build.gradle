plugins {
    id 'com.gradleup.shadow' version '8.3.0' apply false
    id 'maven-publish'
    id 'java'
}

jar {
    manifest {
        attributes("paperweight-mappings-namespace": "spigot")
    }
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.gradleup.shadow'
    group = 'dev.rosewood'
    version = '1.0.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(21))
        disableAutoTargetJvm()
    }

    repositories {
        mavenCentral()

        maven { url = 'https://libraries.minecraft.net' }
        maven { url = 'https://repo.rosewooddev.io/repository/public/' }
        maven { url = 'https://repo.papermc.io/repository/maven-public/' }
        maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
        maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
        maven { url = 'https://repo.dmulloy2.net/nexus/repository/public/' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:24.0.1'
    }
}

dependencies {
    implementation project(':Plugin')
    implementation project(':NMS:Wrapper')
    implementation project(path: ':NMS:v1_19_R3', configuration: 'remapped')
    implementation project(path: ':NMS:v1_20_R4', configuration: 'remapped')
    implementation project(path: ':NMS:v1_21_R1', configuration: 'remapped')
}

shadowJar {
    archiveClassifier.set(null)

    relocate('dev.rosewood.rosegarden', 'dev.rosewood.rosedisplays.lib.rosegarden')

    exclude 'com/zaxxer/hikari/**/*.class'
    exclude 'org/slf4j/**/*.class'
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'rosedisplays'
            pom {
                name = 'rosedisplays'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

build.dependsOn shadowJar
publishShadowPublicationToMavenRepository.dependsOn jar
